name: Emergency Rollback
on:
  workflow_dispatch:
    inputs:
      rollback_to:
        description: 'Tag to rollback to (e.g., v1.2.3)'
        required: true
      reason:
        description: 'Reason for rollback'
        required: true
jobs:
  rollback:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify rollback target exists
        run: |
          if ! docker pull ghcr.io/${{ github.repository_owner }}/octoeverywhere:${{ github.event.inputs.rollback_to }}; then
            echo "::error::Rollback target ${{ github.event.inputs.rollback_to }} does not exist!"
            exit 1
          fi
          echo "Rollback target verified"
      - name: Backup current latest before rollback
        run: |
          if docker pull ghcr.io/${{ github.repository_owner }}/octoeverywhere:latest 2>/dev/null; then
            docker tag ghcr.io/${{ github.repository_owner }}/octoeverywhere:latest \
              ghcr.io/${{ github.repository_owner }}/octoeverywhere:pre-rollback-backup
            docker push ghcr.io/${{ github.repository_owner }}/octoeverywhere:pre-rollback-backup
            echo "Current version backed up as pre-rollback-backup"
          fi
      - name: Perform rollback
        run: |
          # Tag the rollback target as latest
          docker tag ghcr.io/${{ github.repository_owner }}/octoeverywhere:${{ github.event.inputs.rollback_to }} \
            ghcr.io/${{ github.repository_owner }}/octoeverywhere:latest
          docker push ghcr.io/${{ github.repository_owner }}/octoeverywhere:latest

          echo "::notice title=Rollback Complete::Successfully rolled back to ${{ github.event.inputs.rollback_to }}"
          echo "Reason: ${{ github.event.inputs.reason }}"
      - name: Create rollback issue
        uses: actions/github-script@v7
        with:
          script: "github.rest.issues.create({\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n  title: `Emergency Rollback Performed - ${new Date().toISOString().split('T')[0]}`,\n  body: `## Emergency Rollback Details\n  \n  **Rollback Target:** \\`${{ github.event.inputs.rollback_to }}\\`\n  **Reason:** ${{ github.event.inputs.reason }}\n  **Performed By:** @${{ github.actor }}\n  **Date:** ${new Date().toISOString()}\n  \n  ## Actions Taken\n  - ✅ Current \\`latest\\` backed up as \\`pre-rollback-backup\\`\n  - ✅ Rolled back \\`latest\\` to \\`${{ github.event.inputs.rollback_to }}\\`\n  \n  ## Next Steps\n  - [ ] Investigate the issue that caused the rollback\n  - [ ] Fix the underlying problem\n  - [ ] Test the fix thoroughly\n  - [ ] Deploy the fix and close this issue\n  \n  ## Available Backup Tags\n  - \\`pre-rollback-backup\\` - Version that was rolled back from\n  - \\`v<version>\\` - Version-specific tags\n  `,\n  labels: ['rollback', 'urgent']\n})\n"
